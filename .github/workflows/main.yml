name: Deployment

on:
  push:
    branches:
      - "main"

jobs:
  main:
    runs-on: ubuntu-latest
    environment:
      name: Main deployment
      url: https://github.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # UTILITIES
      - name: Extract branch name
        id: extract-branch
        run: echo ::set-output name=branch-name::$(basename "${{ github.ref }}")
      - name: Lowercase repo name
        id: lowercase-repo
        run: echo ::set-output name=lowercase-name::$(echo "${{ github.repository }}" | awk '{print tolower($0)}')
      - name: Prepare docker image name
        id: image_names
        run: |
          IMAGES="${GITHUB_REPOSITORY/docker-/},ghcr.io/${GITHUB_REPOSITORY/docker-/}"
          echo ::set-output name=images::${IMAGES}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.image_names.outputs.images }}
          tags: |
            type=ref,event=tag

      # GENERAL
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: Copy configs
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "compose.yml"
          overwrite: true
          target: ${{ vars.SSH_PATH }}

      - name: Run docker on droplet
        uses: appleboy/ssh-action@v1.2.0
        env:
          BRANCH_NAME: ${{ steps.extract-branch.outputs.branch-name }}
          REPO_NAME: ${{ steps.lowercase-repo.outputs.lowercase-name }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: BRANCH_NAME,REPO_NAME
          script: |
            cd ${{ vars.SSH_PATH }}
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose pull
            docker compose up -d
